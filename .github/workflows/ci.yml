name: Test & checks

on:
  push:
    branches: [master]
  pull_request:

jobs:
  ci:
    name: Test & checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - id: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-${{ steps.rust-toolchain.outputs.rustc_hash }}-
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-${{ steps.rust-toolchain.outputs.rustc_hash }}-
            ${{ runner.os }}-cargo-index-

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-${{ steps.rust-toolchain.outputs.rustc_hash }}-
            ${{ runner.os }}-cargo-build-target-

      - name: Build
        id: build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run tests
        uses: actions-rs/cargo@v1
        if: steps.build.outcome == 'success'
        with:
          command: test

      - name: Check rustfmt
        uses: actions-rs/cargo@v1
        if: steps.build.outcome == 'success'
        with:
          command: fmt
          args: --all -- --check
